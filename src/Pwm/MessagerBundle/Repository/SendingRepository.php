<?php

namespace Pwm\MessagerBundle\Repository;
use Pwm\MessagerBundle\Entity\Notification;
use Pwm\MessagerBundle\Entity\Registration;
/**
 * SendingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SendingRepository extends \Doctrine\ORM\EntityRepository
{

	  /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function findList($registrationId,$uid,$start){
         $qb = $this->createQueryBuilder('a')->join('a.registration','r')
          ->where('r.registrationId=:registrationId and r.info=:uid')
          ->orWhere('r.registrationId=:registrationId and r.info is NULL')
          ->setParameter('registrationId',$registrationId)
          ->setParameter('uid',$uid)
         ->andWhere('a.sendDate<=:sendDate')
         ->setParameter('sendDate',new \DateTime())
         ->orderBy('a.id', 'desc'); 
         $query=$qb->getQuery();
         $query->setFirstResult($start)->setMaxResults(20);
          return $query->getResult();
  }

      /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function findByNotInfo(Notification $notification,Registration $registration){
         $qb = $this->createQueryBuilder('a')->join('a.registration','r')
          ->where('r.info=:info')
          ->setParameter('info',$registration->getInfo())
          ->andWhere('a.notification=:notification')
          ->setParameter('notification',$notification);
          return $qb->getQuery()->getResult();
  }

  	  /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function findCount($registrationId,$uid){
         $qb = $this->createQueryBuilder('a')->join('a.registration','r')
          ->where('r.registrationId=:registrationId and r.info=:uid')
          ->orWhere('r.registrationId=:registrationId and r.info is NULL')
          ->andWhere('a.readed is NULL')
          ->setParameter('registrationId',$registrationId) ->setParameter('uid',$uid)
         ->select('count(a.id)');
          return $qb->getQuery()->getSingleScalarResult();
  }
}

<?php

namespace Pwm\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Session;
use Pwm\AdminBundle\Entity\Info;
/**
 * AbonnementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AbonnementRepository extends EntityRepository
{
	 /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function findForMe(Info $info){
         $qb = $this->createQueryBuilder('a') ->leftJoin('a.session', 's')
         ->where('a.info=:info')->setParameter('info',$info)
         ->andWhere('s.archived=:archived')->setParameter('archived',false); 
          return $qb->getQuery()->getResult();
  }

  public function findUsersUID($package){
         $qb = $this->createQueryBuilder('a')->leftJoin('a.session', 's')->leftJoin('a.info', 'i')
         ->where('a.plan=:plan')->setParameter('plan',$package)
         ->andWhere('s.archived=:archived')->setParameter('archived',false)
         ->select('i'); 
          return $qb->getQuery()->getResult();
  }

    public function findUsersUIDExpired(){
         $qb = $this->createQueryBuilder('a')->leftJoin('a.session', 's')
         ->where('a.endDate<=:endDate')->setParameter('endDate',new \DateTime())
         ->andWhere('s.archived=:archived')->setParameter('archived',false)
         ->select('DISTINCT a.info'); 
          return $qb->getQuery()->getResult();
  }

	 /**
  *Nombre de synchro effectue par utilisateur 
  */
  public function findMeOnThis(Info $info,Session $session){
         $qb = $this->createQueryBuilder('a')
         ->where('a.info=:info')->setParameter('info',$info)
         ->andWhere('a.session=:session')->setParameter('session',$session);

          return $qb->getQuery()->setMaxResults(1)->getOneOrNullResult();
  }
}

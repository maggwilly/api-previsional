<?php

namespace AppBundle\Repository;
use Doctrine\ORM\NoResultException;
use AppBundle\Entity\Produit; 
use AppBundle\Entity\PointVente; 
/**
 * LigneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LigneRepository extends \Doctrine\ORM\EntityRepository
{

      public function findLastCommende(PointVente $pointVente,Produit $produit, $startDate=null, $endDate=null){
           $qb = $this->createQueryBuilder('l')->join('l.commende','c')
          ->where('c.pointVente=:pointVente')->setParameter('pointVente', $pointVente)
          ->andWhere('l.produit=:produit')->setParameter('produit', $produit)
            if($startDate!=null){
           $qb->andWhere('c.date>=:startDate')
          ->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date<=:endDate')
          ->setParameter('endDate',new \DateTime($endDate));
          }
          ->orderBy('c.date', 'desc');
         return $qb->getQuery()->setMaxResults(1)->getResult();  
  }
     

      public function findCommendes(PointVente $pointVente,Produit $produit, $startDate=null, $endDate=null){
           $qb = $this->createQueryBuilder('l')->join('l.commende','c')
          ->where('c.pointVente=:pointVente')->setParameter('pointVente', $pointVente)
          ->andWhere('l.produit=:produit')->setParameter('produit', $produit)
            if($startDate!=null){
           $qb->andWhere('c.date>=:startDate')
          ->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date<=:endDate')
          ->setParameter('endDate',new \DateTime($endDate));
          }
          ->orderBy('c.date', 'asc');
         return $qb->getQuery()->getResult();  
  }
}

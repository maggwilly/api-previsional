<?php

namespace AppBundle\Repository;
use AppBundle\Entity\User; 
use AppBundle\Entity\Secteur; 
use Doctrine\ORM\NoResultException;
/**
 * PointVenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PointVenteRepository extends \Doctrine\ORM\EntityRepository
{
		  

      public function findByUser(User $user,$start=0,$all=false, $startDate=null, $endDate=null,$keys=[0]){
        $qb = $this->createQueryBuilder('p');
        if ($user->isMe()) {
           $qb->where('p.user=:user') ->setParameter('user', $user);
        }else
            $qb->where($qb->expr()->in('p.id', $this->getPointVenteIds($user)));
        if($startDate!=null){
               $qb->andWhere('p.date>=:startDate')
              ->setParameter('startDate', new \DateTime($startDate));
            }
         if($endDate!=null){
             $qb->andWhere('p.date<=:endDate')
             ->setParameter('endDate',new \DateTime($endDate));
            } 
            $qb->andWhere($qb->expr()->notIn('p.id', $keys));           
          return  ($all) ? $qb->getQuery()->getResult() : 
          $qb->getQuery()->setFirstResult($start)->setMaxResults(100)->getResult() ; 
  }


      public function findBySecteur(Secteur $secteur,$start=0,$all=false, $startDate=null, $endDate=null){
        $qb = $this->createQueryBuilder('p');
           $qb->where('p.secteur=:secteur') ->setParameter('secteur', $secteur);
        if($startDate!=null){
               $qb->andWhere('c.date>=:startDate')
              ->setParameter('startDate', new \DateTime($startDate));
            }
         if($endDate!=null){
             $qb->andWhere('c.date<=:endDate')
             ->setParameter('endDate',new \DateTime($endDate));
            }            
          return  ($all) ? $qb->getQuery()->setFirstResult($start)->getResult() : $qb->getQuery()->setFirstResult($start)->setMaxResults(100)->getResult() ; 
  }


      public function findVisited(User $user, $startDate=null, $endDate=null){
           $qb = $this->createQueryBuilder('p')->join('p.commendes','c')
          ->where('c.user=:user')->setParameter('user', $user);
          if($startDate!=null){
           $qb->andWhere('c.date>=:startDate')
          ->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('c.date<=:endDate')
          ->setParameter('endDate',new \DateTime($endDate));
          }
          $qb->orderBy('c.date', 'desc');
         return $qb->getQuery()->getArrayResult();  
     }



    public function getPointVenteIds(User $user){
        $ids= array();
     foreach ($user->getPointsPassages() as $pointVente) {
         $ids[]=$pointVente->getId();
       }
     return $ids;  
}
}
<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
/**
 * VisiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VisiteRepository extends EntityRepository
{

  /**
  *Nombre de point de vente ayant des affiches
  * Nombre de point de vente qui s'approvisionne chez un agent commercial
  */
	public function excApp ($region=null, $startDate=null, $endDate=null){

        $qb = $this->createQueryBuilder('v')->join('v.pointVente','p');
        if($region!=null){
           $qb->where('p.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('v.date>=:startDate')
          ->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('p.date<=:endDate')
          ->setParameter('endDate',new \DateTime($endDate));
          }
         $qb->select('count(v.sapp) as sapp')->addSelect('count(v.exc) as exc')->addSelect('count(v.aff) as aff');

         try {
       return $qb->getQuery()->getArrayResult();
     } catch (NoResultException $e) {
        return array(array('sapp'=>0,'exc'=>0,'aff'=>0));
     }
  }




  /**
  *Nombre total de visite effectue 
  */
    public function nombreVisite ($region=null, $startDate=null, $endDate=null){

        $qb = $this->createQueryBuilder('v')->join('v.pointVente','pv');
        if($region!=null){
           $qb->where('pv.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('v.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('v.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
   try {
     $qb->select('count(v.id) as nombreVisite');
         return $qb->getQuery()->getSingleScalarResult();  
   } catch (NoResultException $e) {
        return 0;
     }
  }

}

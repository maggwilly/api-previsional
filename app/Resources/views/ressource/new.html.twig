{% extends "AppBundle::table.html.twig" %}
{% block page_title %}Nouveau document{% endblock %}
  {% block page_sub_title %}
       <ul class="breadcrumb">
        <li>
          <i class="icon-home"></i>
          <a href="{{ path('homepage')}}">Home</a> 
          <i class="icon-angle-right"></i>         
        </li>
        {% if session %}
        <li>
      <a href="{{ path('ressource_index', { 'id': session.id }) }}">{{session.nomConcours}}</a> 
          <i class="icon-angle-right"></i>          
        </li>    
      {% else %}  
         <li>
      <a href="{{ path('ressource_index') }}">Documents</a> 
      <i class="icon-angle-right"></i>            
        </li>       
        {% endif %}  
        <li>
      <a href="#">Nouveau document</a>           
        </li>               
      </ul>
   {% endblock %}
 {% block table_title %}Nouveau document{% endblock %}  
{% block table %}
    {{ form_start(form) }}
        {{ form_widget(form) }}
        <input type="submit" value="EnrÃ©gistrer" />
    {{ form_end(form) }}
    <ul>
  {% if session %}
        <li>
           <a href="{{ path('ressource_index', { 'session': session.id }) }}">Retour</a>
        </li>
         {% else %}         
          <li>
         <a href="{{ path('ressource_index') }}">Retour</a>    
        </li>       
        {% endif %}          
    </ul>
{% endblock %}
{% block javascripts %}
{{parent()}}
<script src="https://static.filestackapi.com/v3/filestack.js"></script>
<script type="text/javascript">
const urlinput=document.getElementById('pwm_adminbundle_ressource_url');
const imageurlinput=document.getElementById('pwm_adminbundle_ressource_imageUrl');
urlinput.addEventListener("focus", myurlFunction,true);
imageurlinput.addEventListener("focus", myurlimageFunction,true);

const client = filestack.init('AhuJdwUuNSqGQ57MJKIxTz');
function myurlFunction() {
  client.pick({accept: '.pdf',lang: 'fr',maxSize: 1024*1024, maxFiles: 1
  }).then(function(result) {
  const fileUrl = result.filesUploaded[0].url; 
     urlinput.value=fileUrl; 
   });   
}

function myurlimageFunction() {
  client.pick({accept: 'image/*',lang: 'fr',imageMax: [800, 600],disableTransformer: true
  }).then(function(result) {
  const fileUrl = result.filesUploaded[0].url; 
     imageurlinput.value=fileUrl; 
   });   
}
</script>
{% endblock %} 